"""Tests terminal quadratic condition with no drift
Equation:
$$
dY_t = Z_t dW_t, \quad Y_T = W^2_T, \\
$$
Where $W_t$ is the standard brownian motion.
"""

from mean_field_tools.deep_bsde.forward_backward_sde import Filtration, BackwardSDE
from mean_field_tools.deep_bsde.function_approximator import FunctionApproximatorArtist
import torch


def test_terminal_quadratic_no_drift():
    TIME_DOMAIN = torch.linspace(0, 1, 101)
    NUMBER_OF_PATHS = 100
    SPATIAL_DIMENSIONS = 1

    def TERMINAL_CONDITION(filtration: Filtration):
        B_T = filtration.brownian_process[:, -1, :]
        return B_T**2

    def ANALYTICAL_SOLUTION(x, t, T):
        return x**2 + (T - t)

    filtration = Filtration(SPATIAL_DIMENSIONS, TIME_DOMAIN, NUMBER_OF_PATHS, seed=0)

    bsde = BackwardSDE(
        terminal_condition_function=TERMINAL_CONDITION,
        filtration=filtration,
    )

    bsde.initialize_approximator()

    artist = FunctionApproximatorArtist(
        save_figures=False, analytical_solution=ANALYTICAL_SOLUTION
    )

    bsde.solve(
        approximator_args={
            "batch_size": 100,
            "number_of_iterations": 500,
            "number_of_epochs": 5,
            "number_of_plots": 5,
            "plotter": artist,
        }
    )

    forward_path = bsde.filtration.get_paths()[:1, :, :]

    output = bsde.y_approximator(forward_path).tolist()
    forward_path = bsde.filtration.get_paths()[:1, :, :]

    output = bsde.y_approximator(forward_path).tolist()

    benchmark = [
        [
            [1.078091025352478],
            [1.0550116300582886],
            [1.059941053390503],
            [1.0533831119537354],
            [1.0564188957214355],
            [1.0110217332839966],
            [0.9841954708099365],
            [0.9738654494285583],
            [1.0487172603607178],
            [1.01274836063385],
            [1.0998140573501587],
            [1.0517555475234985],
            [1.0112754106521606],
            [0.987628161907196],
            [0.9026632308959961],
            [0.8589410781860352],
            [0.8491461873054504],
            [0.8831323981285095],
            [1.006142258644104],
            [0.9354339241981506],
            [0.8617685437202454],
            [0.8161095380783081],
            [0.9119924902915955],
            [0.9362608790397644],
            [0.779144823551178],
            [0.738656222820282],
            [0.7465957999229431],
            [0.7421115040779114],
            [0.7216741442680359],
            [0.6744260787963867],
            [0.6729432344436646],
            [0.6898524165153503],
            [0.6513703465461731],
            [0.6288049817085266],
            [0.6176900863647461],
            [0.602732241153717],
            [0.5928255319595337],
            [0.5867630243301392],
            [0.5776598453521729],
            [0.581463634967804],
            [0.5848646759986877],
            [0.5704995393753052],
            [0.5921110510826111],
            [0.5684018135070801],
            [0.5601259469985962],
            [0.5742868781089783],
            [0.7298246622085571],
            [0.6019452214241028],
            [0.5105465650558472],
            [0.4800921082496643],
            [0.49893271923065186],
            [0.5405184030532837],
            [0.5411398410797119],
            [0.5180912017822266],
            [0.4883304834365845],
            [0.5077129006385803],
            [0.47735971212387085],
            [0.448070228099823],
            [0.4749171733856201],
            [0.5679508447647095],
            [0.9511717557907104],
            [0.7338441610336304],
            [0.5946802496910095],
            [0.7848835587501526],
            [0.7066294550895691],
            [0.6339104175567627],
            [0.7281994819641113],
            [0.8677189946174622],
            [1.065540075302124],
            [0.8193032741546631],
            [1.248502254486084],
            [1.1447123289108276],
            [1.1985329389572144],
            [0.8976847529411316],
            [0.8041827082633972],
            [0.7278374433517456],
            [0.6551969647407532],
            [0.5307480096817017],
            [0.6429562568664551],
            [0.6174970865249634],
            [0.7096720337867737],
            [0.6882200241088867],
            [0.775104284286499],
            [0.6511278748512268],
            [0.6426905989646912],
            [0.7485243082046509],
            [0.6834555268287659],
            [0.8288105130195618],
            [0.8790820240974426],
            [0.8290731310844421],
            [1.2658599615097046],
            [0.8821259140968323],
            [0.8647381067276001],
            [0.6918123364448547],
            [0.5586596131324768],
            [0.5552507638931274],
            [0.6383931636810303],
            [0.8901340365409851],
            [0.6628897190093994],
            [0.7058022618293762],
            [0.7801620364189148],
        ]
    ]

    assert output == benchmark
